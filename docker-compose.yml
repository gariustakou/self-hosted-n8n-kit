volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  openwebui_storage:

networks:
  demo:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['demo']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_VERSION_NOTIFICATIONS_ENABLED=false
    - N8N_TEMPLATES_ENABLED=true
    - N8N_ONBOARDING_FLOW_DISABLED=false
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    - N8N_DEFAULT_BINARY_DATA_MODE=${N8N_DEFAULT_BINARY_DATA_MODE}
    - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
    - N8N_DEFAULT_BINARY_DATA_PATH=/data/shared
    - OLLAMA_HOST=${OLLAMA_HOST:-ollama:11434}
    # === NOUVELLES VARIABLES POUR CLOUDFLARE ===
    - N8N_HOST=0.0.0.0
    - N8N_PORT=5678
    - N8N_PROTOCOL=http
    - WEBHOOK_URL=https://n8n.gariusdeveloper.com
    - N8N_SECURE_COOKIE=true
    - N8N_RUNNERS_ENABLED=true
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    - TZ=${GENERIC_TIMEZONE}
    - N8N_EDITOR_BASE_URL=https://n8n.gariusdeveloper.com
    # Permissions pour les fonctions personnalisées
    - NODE_FUNCTION_ALLOW_BUILTIN=*
    - NODE_FUNCTION_ALLOW_EXTERNAL=*
      
    # Logs
    - N8N_LOG_LEVEL=info
    - N8N_LOG_OUTPUT=console
  # Sécurité des exécutions
    - EXECUTIONS_TIMEOUT=3600
    - EXECUTIONS_TIMEOUT_MAX=3600
    - EXECUTIONS_DATA_SAVE_ON_ERROR=all
    - EXECUTIONS_DATA_SAVE_ON_SUCCESS=all
    - EXECUTIONS_DATA_SAVE_ON_PROGRESS=false
    - EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=false
      
      # Queue mode (pour les grosses charges)
    - EXECUTIONS_PROCESS=main
    - N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN=true

  env_file:
    - path: .env
      required: true

x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks: ['demo']
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: ['demo']
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  environment:
    - OLLAMA_HOST=0.0.0.0
  command:
    - "-c"
    - "sleep 3; ollama pull llama3.2"

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    networks: ['demo']
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    hostname: open-webui
    container_name: open-webui
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 8090:8080
    volumes:
      - openwebui_storage:/app/backend/data
      - ./shared:/app/backend/data/uploads
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_AUTH=${WEBUI_AUTH:-True}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
    env_file:
      - path: .env
        required: false
    depends_on:
      - ollama-cpu
    profiles: ["cpu"]

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    depends_on:
      - ollama-cpu
